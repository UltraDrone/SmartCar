C251 COMPILER V5.60.0,  SEEKFREE_VIRSCO                                                    06/07/24  23:05:06  PAGE 1   


C251 COMPILER V5.60.0, COMPILATION OF MODULE SEEKFREE_VIRSCO
OBJECT MODULE PLACED IN .\Out_File\SEEKFREE_VIRSCO.obj
COMPILER INVOKED BY: G:\Keil_v5\C251\C251\BIN\C251.EXE ..\..\Libraries\seekfree_peripheral\SEEKFREE_VIRSCO.c XSMALL INTR
                    -2 WARNINGLEVEL(3) OPTIMIZE(0,SPEED) BROWSE INCDIR(..\..\Libraries\libraries;..\..\Libraries\seekfree_libraries;..\..\Lib
                    -raries\seekfree_peripheral;..\CODE;..\USER\inc;..\USER\src;..\CODE) DEBUG PRINT(.\Out_File\SEEKFREE_VIRSCO.lst) OBJECT(.
                    -\Out_File\SEEKFREE_VIRSCO.obj) 

stmt  level    source

    1          /********************************************************************************************************
             -*************
    2           * COPYRIGHT NOTICE
    3           * Copyright (c) 2018,逐飞科技
    4           * All rights reserved.
    5           * 技术讨论QQ群：一群：179029047(已满)  二群：244861897
    6           *
    7           * 以下所有内容版权均属逐飞科技所有，未经允许不得用于商业用途，
    8           * 欢迎各位使用并传播本程序，修改内容时必须保留逐飞科技的版权声明。
    9           *
   10           * @file                虚拟示波器协议
   11           * @company                     成都逐飞科技有限公司
   12           * @author              逐飞科技(QQ3184284598)
   13           * @version             查看doc内version文件 版本说明
   14           * @Software            MDK FOR C251 V5.60
   15           * @Target core         STC32G12K128
   16           * @Taobao              https://seekfree.taobao.com/
   17           * @date                2019-04-30
   18           * @note                    示波器下载地址：https://pan.baidu.com/s/198CMXTZsbI3HAEqNXDngBw（包含清华直立方案资料）
   19           ********************************************************************************************************
             -************/
   20          
   21          
   22          
   23          #include "zf_uart.h"
   24          #include "SEEKFREE_WIRELESS.h"
   25          #include "SEEKFREE_VIRSCO.h"
   26          
   27          
   28          uint8 virtual_scope_data[10];
   29          
   30          //-------------------------------------------------------------------------------------------------------
             -------------
   31          //  @brief      CRC校验（内部使用，用户无需关心）
   32          //  @param      Buf             需要进行CRC计算的数据地址
   33          //  @param      CRC_CNT         需要进行CRC计算的数据个数
   34          //  @return     void
   35          //  @since      v1.0
   36          //  Sample usage:
   37          //-------------------------------------------------------------------------------------------------------
             -------------
   38          uint16 CRC_CHECK(uint8 *Buf, uint8 CRC_CNT)
   39          {
   40   1          uint16 CRC_Temp;
   41   1          uint8 i, j;
   42   1          CRC_Temp = 0xffff;
   43   1      
   44   1          for (i = 0; i < CRC_CNT; i++) {
   45   2              CRC_Temp ^= Buf[i];
   46   2      
   47   2              for (j = 0; j < 8; j++) {
   48   3                  if (CRC_Temp & 0x01)
   49   3                      CRC_Temp = (CRC_Temp >> 1 ) ^ 0xa001;
   50   3                  else
   51   3                      CRC_Temp = CRC_Temp >> 1;
   52   3              }
C251 COMPILER V5.60.0,  SEEKFREE_VIRSCO                                                    06/07/24  23:05:06  PAGE 2   

   53   2          }
   54   1      
   55   1          return(CRC_Temp);
   56   1      }
   57          
   58          //-------------------------------------------------------------------------------------------------------
             -------------
   59          //  @brief      虚拟示波器数据转换函数
   60          //  @param      data1       要发送的第一个数据
   61          //  @param      data2       要发送的第二个数据
   62          //  @param      data3       要发送的第三个数据
   63          //  @param      data4       要发送的第四个数据
   64          //  @param      *dat        转换之后存放数据的地址
   65          //  @return     void
   66          //  @since      v1.0
   67          //  Sample usage:
   68          //-------------------------------------------------------------------------------------------------------
             -------------
   69          void data_conversion(int16 data1, int16 data2, int16 data3, int16 data4, uint8 *dat)
   70          {
   71   1          uint16 CRC16;
   72   1      
   73   1          dat[0] = (uint8)((uint16)data1 & 0xff);
   74   1          dat[1] = (uint8)((uint16)data1 >> 8);
   75   1      
   76   1          dat[2] = (uint8)((uint16)data2 & 0xff);
   77   1          dat[3] = (uint8)((uint16)data2 >> 8);
   78   1      
   79   1          dat[4] = (uint8)((uint16)data3 & 0xff);
   80   1          dat[5] = (uint8)((uint16)data3 >> 8);
   81   1      
   82   1          dat[6] = (uint8)((uint16)data4 & 0xff);
   83   1          dat[7] = (uint8)((uint16)data4 >> 8);
   84   1      
   85   1          CRC16  = CRC_CHECK(dat, 8);
   86   1          dat[8] = (uint8)(CRC16 & 0xff);
   87   1          dat[9] = (uint8)(CRC16 >> 8);
   88   1      
   89   1          //uart_putbuff(USART_0,dat,10);  //数据转换完成后，使用串口发送将数组的内容发送出去
   90   1      }
   91          


Module Information          Static   Overlayable
------------------------------------------------
  code size            =       374     ------
  ecode size           =    ------     ------
  data size            =    ------     ------
  idata size           =    ------     ------
  pdata size           =    ------     ------
  xdata size           =    ------     ------
  xdata-const size     =    ------     ------
  edata size           =        33     ------
  bit size             =    ------     ------
  ebit size            =    ------     ------
  bitaddressable size  =    ------     ------
  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
  huge data size       =    ------     ------
  const size           =    ------     ------
  hconst size          =    ------     ------
End of Module Information.


C251 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
