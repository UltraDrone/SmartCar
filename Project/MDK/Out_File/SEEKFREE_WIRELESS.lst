C251 COMPILER V5.60.0,  SEEKFREE_WIRELESS                                                  06/07/24  23:05:06  PAGE 1   


C251 COMPILER V5.60.0, COMPILATION OF MODULE SEEKFREE_WIRELESS
OBJECT MODULE PLACED IN .\Out_File\SEEKFREE_WIRELESS.obj
COMPILER INVOKED BY: G:\Keil_v5\C251\C251\BIN\C251.EXE ..\..\Libraries\seekfree_peripheral\SEEKFREE_WIRELESS.c XSMALL IN
                    -TR2 WARNINGLEVEL(3) OPTIMIZE(0,SPEED) BROWSE INCDIR(..\..\Libraries\libraries;..\..\Libraries\seekfree_libraries;..\..\L
                    -ibraries\seekfree_peripheral;..\CODE;..\USER\inc;..\USER\src;..\CODE) DEBUG PRINT(.\Out_File\SEEKFREE_WIRELESS.lst) OBJE
                    -CT(.\Out_File\SEEKFREE_WIRELESS.obj) 

stmt  level    source

    1          /********************************************************************************************************
             -*************
    2           * COPYRIGHT NOTICE
    3           * Copyright (c) 2018,Öð·É¿Æ¼¼
    4           * All rights reserved.
    5           * ¼¼ÊõÌÖÂÛQQÈº£ºÒ»Èº£º179029047(ÒÑÂú)  ¶þÈº£º244861897
    6           *
    7           * ÒÔÏÂËùÓÐÄÚÈÝ°æÈ¨¾ùÊôÖð·É¿Æ¼¼ËùÓÐ£¬Î´¾­ÔÊÐí²»µÃÓÃÓÚÉÌÒµÓÃÍ¾£¬
    8           * »¶Ó­¸÷Î»Ê¹ÓÃ²¢´«²¥±¾³ÌÐò£¬ÐÞ¸ÄÄÚÈÝÊ±±ØÐë±£ÁôÖð·É¿Æ¼¼µÄ°æÈ¨ÉùÃ÷¡£
    9           *
   10           * @file                Öð·É¿Æ¼¼ÎÞÏß×ª´®¿ÚÄ£¿é
   11           * @company                     ³É¶¼Öð·É¿Æ¼¼ÓÐÏÞ¹«Ë¾
   12           * @author              Öð·É¿Æ¼¼(QQ3184284598)
   13           * @version             ²é¿´docÄÚversionÎÄ¼þ °æ±¾ËµÃ÷
   14           * @Software            MDK FOR C251 V5.60
   15           * @Target core         STC32G12K128
   16           * @Taobao              https://seekfree.taobao.com/
   17           * @date                2019-03-27
   18           * @note
   19                                                  ½ÓÏß¶¨Òå£º
   20                                                  ------------------------------------
   21                                                  ÎÞÏß×ª´®¿Ú      µ¥Æ¬»ú
   22                                          RX              ²é¿´SEEKFREE_WIRELESS.hÎÄ¼þÖÐµÄWIRELESS_UART_TXºê¶¨Òå
   23                                          TX              ²é¿´SEEKFREE_WIRELESS.hÎÄ¼þÖÐµÄWIRELESS_UART_RXºê¶¨Òå
   24                                          RTS             ²é¿´SEEKFREE_WIRELESS.hÎÄ¼þÖÐµÄRTS_PINºê¶¨Òå
   25                                          CMD             ²é¿´SEEKFREE_WIRELESS.hÎÄ¼þÖÐµÄCMD_PINºê¶¨Òå
   26                                                  ------------------------------------
   27           ********************************************************************************************************
             -************/
   28          
   29          
   30          #include "SEEKFREE_WIRELESS.h"
   31          #include "zf_uart.h"
   32          #include "zf_fifo.h"
   33          
   34          
   35          static  fifo_struct     wireless_uart_fifo;
   36          static  uint8           wireless_uart_buffer[WIRELESS_BUFFER_SIZE];  // Êý¾Ý´æ·ÅÊý×é
   37          
   38          static          uint8   wireless_uart_data;
   39          
   40          //-------------------------------------------------------------------------------------------------------
             -------------
   41          //  @brief      ÎÞÏß×ª´®¿ÚÄ£¿é»Øµ÷º¯Êý
   42          //  @param      NULL
   43          //  @return     void
   44          //  @since      v1.0
   45          //  Sample usage:
   46          //  @note
   47          //-------------------------------------------------------------------------------------------------------
             -------------
   48          void wireless_uart_callback(void)
   49          {
   50   1          //½Óµ½Ò»¸ö×Ö½Úºóµ¥Æ¬»ú½«»á½øÈë´®¿ÚÖÐ¶Ï£¬Í¨¹ýÔÚ´Ë´¦¶ÁÈ¡wireless_uart_data¿ÉÒÔÈ¡×ßÊý¾Ý
   51   1          wireless_uart_data = WIRELESS_DATA_BUF;
   52   1          fifo_write_buffer(&wireless_uart_fifo, &wireless_uart_data, 1);       // ´æÈë FIFO
C251 COMPILER V5.60.0,  SEEKFREE_WIRELESS                                                  06/07/24  23:05:06  PAGE 2   

   53   1      }
   54          
   55          
   56          
   57          //-------------------------------------------------------------------------------------------------------
             -------------
   58          //  @brief      ÎÞÏß×ª´®¿ÚÄ£¿é ·¢ËÍº¯Êý
   59          //  @param      buff        ÐèÒª·¢ËÍµÄÊý¾ÝµØÖ·
   60          //  @param      len         ·¢ËÍ³¤¶È
   61          //  @return     uint32      Ê£ÓàÎ´·¢ËÍµÄ×Ö½ÚÊý
   62          //  @since      v1.0
   63          //  Sample usage:
   64          //  @note
   65          //-------------------------------------------------------------------------------------------------------
             -------------
   66          uint32 wireless_uart_send_buff(uint8 *buff, uint16 len)
   67          {
   68   1          while(len > 30)
   69   1          {
   70   2              if(WIRELESS_RTS_PIN == 1)
   71   2              {
   72   3                  return len;//Ä£¿éÃ¦,Èç¹ûÔÊÐíµ±Ç°³ÌÐòÊ¹ÓÃwhileµÈ´ý Ôò¿ÉÒÔÊ¹ÓÃºóÃæ×¢ÊÍµÄwhileµÈ´ýÓï¾äÌæ»»±¾ifÓï
             -¾ä
   73   3              }
   74   2      
   75   2              //while(RTS_PIN);  //Èç¹ûRTSÎªµÍµçÆ½£¬Ôò¼ÌÐø·¢ËÍÊý¾Ý
   76   2              uart_putbuff(WIRELESS_UART, buff, 30);
   77   2      
   78   2              buff += 30; //µØÖ·Æ«ÒÆ
   79   2              len -= 30;//ÊýÁ¿
   80   2          }
   81   1      
   82   1          if(WIRELESS_RTS_PIN == 1)
   83   1          {
   84   2              return len;//Ä£¿éÃ¦,Èç¹ûÔÊÐíµ±Ç°³ÌÐòÊ¹ÓÃwhileµÈ´ý Ôò¿ÉÒÔÊ¹ÓÃºóÃæ×¢ÊÍµÄwhileµÈ´ýÓï¾äÌæ»»±¾ifÓï¾ä
   85   2          }
   86   1      
   87   1          //while(WIRELESS_RTS_PIN);  //Èç¹ûRTSÎªµÍµçÆ½£¬Ôò¼ÌÐø·¢ËÍÊý¾Ý
   88   1          uart_putbuff(WIRELESS_UART, buff, len); //·¢ËÍ×îºóµÄÊý¾Ý
   89   1      
   90   1          return 0;
   91   1      }
   92          
   93          
   94          
   95          //-------------------------------------------------------------------------------------------------------
             -------------
   96          //  @brief      ÎÞÏß×ª´®¿ÚÄ£¿é ¶ÁÈ¡º¯Êý
   97          //  @param      buff            ´æ´¢µÄÊý¾ÝµØÖ·
   98          //  @param      len             ³¤¶È
   99          //  @return     uint32          Êµ¼Ê¶ÁÈ¡×Ö½ÚÊý
  100          //  Sample usage:
  101          //-------------------------------------------------------------------------------------------------------
             -------------
  102          uint32 wireless_uart_read_buff (uint8 *buff, uint32 len)
  103          {
  104   1          uint32 data_len = len;
  105   1          fifo_read_buffer(&wireless_uart_fifo, buff, &data_len, FIFO_READ_AND_CLEAN);
  106   1          return data_len;
  107   1      }
  108          
  109          
  110          
  111          
  112          //-------------------------------------------------------------------------------------------------------
             -------------
C251 COMPILER V5.60.0,  SEEKFREE_WIRELESS                                                  06/07/24  23:05:06  PAGE 3   

  113          //  @brief      ÎÞÏß×ª ´®¿ÚÄ£¿é³õÊ¼»¯
  114          //  @param      NULL
  115          //  @return     void
  116          //  @since      v1.0
  117          //  Sample usage:
  118          //  @note
  119          //-------------------------------------------------------------------------------------------------------
             -------------
  120          void wireless_uart_init(void)
  121          {
  122   1          WIRELESS_RTS_PIN = 0;
  123   1          wireless_type = WIRELESS_SI24R1;
  124   1          //±¾º¯ÊýÊ¹ÓÃµÄ²¨ÌØÂÊÎª115200£¬ÎªÎÞÏß×ª´®¿ÚÄ£¿éµÄÄ¬ÈÏ²¨ÌØÂÊ£¬ÈçÐèÆäËû²¨ÌØÂÊÇë×ÔÐÐÅäÖÃÄ£¿é²¢ÐÞ¸Ä´®¿ÚµÄ²
             -¨ÌØÂÊ
  125   1          fifo_init(&wireless_uart_fifo, wireless_uart_buffer, WIRELESS_BUFFER_SIZE);
  126   1          uart_init(WIRELESS_UART, WIRELESS_UART_RX_PIN, WIRELESS_UART_TX_PIN, WIRELESS_UART_BAUD, WIRELESS_TIM
             -ER_N);        //³õÊ¼»¯´®¿Ú
  127   1      
  128   1      }


Module Information          Static   Overlayable
------------------------------------------------
  code size            =       249     ------
  ecode size           =    ------     ------
  data size            =    ------     ------
  idata size           =    ------     ------
  pdata size           =    ------     ------
  xdata size           =    ------     ------
  xdata-const size     =    ------     ------
  edata size           =       103     ------
  bit size             =    ------     ------
  ebit size            =    ------     ------
  bitaddressable size  =    ------     ------
  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
  huge data size       =    ------     ------
  const size           =    ------     ------
  hconst size          =    ------     ------
End of Module Information.


C251 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
